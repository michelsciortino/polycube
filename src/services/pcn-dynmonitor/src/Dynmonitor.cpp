/**
* dynmonitor API generated from dynmonitor.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


// TODO: Modify these methods with your own implementation


#include "Dynmonitor.h"
#include "Dynmonitor_dp.h"

Dynmonitor::Dynmonitor(const std::string name, const DynmonitorJsonObject &conf)
  : TransparentCube(conf.getBase(), { dynmonitor_code }, {}),
    DynmonitorBase(name) {
  logger()->info("Creating Dynmonitor instance");
  auto value = conf.getDataplane();
  addDataplane(conf.getDataplane());
  auto value = conf.getMetrics();
  addMetrics(conf.getMetrics());
}


Dynmonitor::~Dynmonitor() {
  logger()->info("Destroying Dynmonitor instance");
}

void Dynmonitor::packet_in(polycube::service::Sense sense,
    polycube::service::PacketInMetadata &md,
    const std::vector<uint8_t> &packet) {
    logger()->debug("Packet received");
}

std::shared_ptr<Dataplane> Dynmonitor::getDataplane() {
  throw std::runtime_error("Dynmonitor::getDataplane: Method not implemented");
}

void Dynmonitor::addDataplane(const DataplaneJsonObject &value) {
  throw std::runtime_error("Dynmonitor::addDataplane: Method not implemented");
}

// Basic default implementation, place your extension here (if needed)
void Dynmonitor::replaceDataplane(const DataplaneJsonObject &conf) {
  // call default implementation in base class
  DynmonitorBase::replaceDataplane(conf);
}

void Dynmonitor::delDataplane() {
  throw std::runtime_error("Dynmonitor::delDataplane: method not implemented");
}

std::shared_ptr<Metrics> Dynmonitor::getMetrics() {
  throw std::runtime_error("Dynmonitor::getMetrics: Method not implemented");
}

void Dynmonitor::addMetrics(const MetricsJsonObject &value) {
  throw std::runtime_error("Dynmonitor::addMetrics: Method not implemented");
}

// Basic default implementation, place your extension here (if needed)
void Dynmonitor::replaceMetrics(const MetricsJsonObject &conf) {
  // call default implementation in base class
  DynmonitorBase::replaceMetrics(conf);
}

void Dynmonitor::delMetrics() {
  throw std::runtime_error("Dynmonitor::delMetrics: method not implemented");
}


