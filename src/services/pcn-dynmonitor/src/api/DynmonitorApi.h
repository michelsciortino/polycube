/**
* dynmonitor API generated from dynmonitor.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */

/*
* DynmonitorApi.h
*
*/

#pragma once

#define POLYCUBE_SERVICE_NAME "dynmonitor"


#include "polycube/services/response.h"
#include "polycube/services/shared_lib_elements.h"

#include "DataplaneJsonObject.h"
#include "DataplaneMetricsJsonObject.h"
#include "DataplaneMetricsCountersJsonObject.h"
#include "DataplaneMetricsCountersLablesJsonObject.h"
#include "DynmonitorJsonObject.h"
#include "MetricsJsonObject.h"
#include "MetricsEntryJsonObject.h"
#include "MetricsEntryLablesJsonObject.h"
#include <vector>


#ifdef __cplusplus
extern "C" {
#endif

Response create_dynmonitor_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_dynmonitor_dataplane_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_dynmonitor_dataplane_metrics_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_dynmonitor_dataplane_metrics_counters_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_dynmonitor_dataplane_metrics_counters_lables_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_dynmonitor_dataplane_metrics_counters_lables_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_dynmonitor_dataplane_metrics_counters_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response delete_dynmonitor_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_dynmonitor_dataplane_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_dynmonitor_dataplane_metrics_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_dynmonitor_dataplane_metrics_counters_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_dynmonitor_dataplane_metrics_counters_lables_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_dynmonitor_dataplane_metrics_counters_lables_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_dynmonitor_dataplane_metrics_counters_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_dynmonitor_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_dynmonitor_dataplane_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_dynmonitor_dataplane_code_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_dynmonitor_dataplane_metrics_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_dynmonitor_dataplane_metrics_counters_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_dynmonitor_dataplane_metrics_counters_lables_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_dynmonitor_dataplane_metrics_counters_lables_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_dynmonitor_dataplane_metrics_counters_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_dynmonitor_dataplane_metrics_counters_min_entries_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_dynmonitor_dataplane_metrics_counters_table_name_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_dynmonitor_dataplane_metrics_counters_table_type_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_dynmonitor_dataplane_name_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_dynmonitor_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_dynmonitor_metrics_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_dynmonitor_metrics_entry_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_dynmonitor_metrics_entry_lables_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_dynmonitor_metrics_entry_lables_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_dynmonitor_metrics_entry_lables_value_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_dynmonitor_metrics_entry_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_dynmonitor_metrics_entry_timestamp_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_dynmonitor_metrics_entry_value_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response replace_dynmonitor_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_dynmonitor_dataplane_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_dynmonitor_dataplane_metrics_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_dynmonitor_dataplane_metrics_counters_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_dynmonitor_dataplane_metrics_counters_lables_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_dynmonitor_dataplane_metrics_counters_lables_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_dynmonitor_dataplane_metrics_counters_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_dynmonitor_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_dynmonitor_dataplane_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_dynmonitor_dataplane_code_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_dynmonitor_dataplane_metrics_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_dynmonitor_dataplane_metrics_counters_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_dynmonitor_dataplane_metrics_counters_lables_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_dynmonitor_dataplane_metrics_counters_lables_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_dynmonitor_dataplane_metrics_counters_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_dynmonitor_dataplane_metrics_counters_min_entries_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_dynmonitor_dataplane_metrics_counters_table_name_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_dynmonitor_dataplane_metrics_counters_table_type_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_dynmonitor_dataplane_name_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_dynmonitor_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);

Response dynmonitor_dataplane_metrics_counters_lables_list_by_id_help(const char *name, const Key *keys, size_t num_keys);
Response dynmonitor_dataplane_metrics_counters_list_by_id_help(const char *name, const Key *keys, size_t num_keys);
Response dynmonitor_list_by_id_help(const char *name, const Key *keys, size_t num_keys);
Response dynmonitor_metrics_entry_lables_list_by_id_help(const char *name, const Key *keys, size_t num_keys);
Response dynmonitor_metrics_entry_list_by_id_help(const char *name, const Key *keys, size_t num_keys);


#ifdef __cplusplus
}
#endif

