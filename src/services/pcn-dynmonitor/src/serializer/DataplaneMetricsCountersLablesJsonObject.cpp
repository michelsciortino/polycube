/**
* dynmonitor API generated from dynmonitor.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */



#include "DataplaneMetricsCountersLablesJsonObject.h"
#include <regex>

namespace polycube {
namespace service {
namespace model {

DataplaneMetricsCountersLablesJsonObject::DataplaneMetricsCountersLablesJsonObject() {
  m_nameIsSet = false;
}

DataplaneMetricsCountersLablesJsonObject::DataplaneMetricsCountersLablesJsonObject(const nlohmann::json &val) :
  JsonObjectBase(val) {
  m_nameIsSet = false;


  if (val.count("name")) {
    setName(val.at("name").get<std::string>());
  }
}

nlohmann::json DataplaneMetricsCountersLablesJsonObject::toJson() const {
  nlohmann::json val = nlohmann::json::object();
  if (!getBase().is_null()) {
    val.update(getBase());
  }

  if (m_nameIsSet) {
    val["name"] = m_name;
  }

  return val;
}

std::string DataplaneMetricsCountersLablesJsonObject::getName() const {
  return m_name;
}

void DataplaneMetricsCountersLablesJsonObject::setName(std::string value) {
  m_name = value;
  m_nameIsSet = true;
}

bool DataplaneMetricsCountersLablesJsonObject::nameIsSet() const {
  return m_nameIsSet;
}




}
}
}

