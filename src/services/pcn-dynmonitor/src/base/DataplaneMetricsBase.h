/**
* dynmonitor API generated from dynmonitor.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */

/*
* DataplaneMetricsBase.h
*
*
*/

#pragma once

#include "../serializer/DataplaneMetricsJsonObject.h"

#include "../DataplaneMetricsCounters.h"





#include <spdlog/spdlog.h>

using namespace polycube::service::model;

class Dataplane;

class DataplaneMetricsBase {
 public:
  
  DataplaneMetricsBase(Dataplane &parent);
  
  virtual ~DataplaneMetricsBase();
  virtual void update(const DataplaneMetricsJsonObject &conf);
  virtual DataplaneMetricsJsonObject toJsonObject();

  /// <summary>
  /// The list of exported coutners
  /// </summary>
  virtual std::shared_ptr<DataplaneMetricsCounters> getCounters(const std::string &name) = 0;
  virtual std::vector<std::shared_ptr<DataplaneMetricsCounters>> getCountersList() = 0;
  virtual void addCounters(const std::string &name, const DataplaneMetricsCountersJsonObject &conf) = 0;
  virtual void addCountersList(const std::vector<DataplaneMetricsCountersJsonObject> &conf);
  virtual void replaceCounters(const std::string &name, const DataplaneMetricsCountersJsonObject &conf);
  virtual void delCounters(const std::string &name) = 0;
  virtual void delCountersList();

  std::shared_ptr<spdlog::logger> logger();
 protected:
  Dataplane &parent_;
};
