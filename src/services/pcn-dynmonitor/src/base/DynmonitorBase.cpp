/**
* dynmonitor API generated from dynmonitor.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */


#include "DynmonitorBase.h"

DynmonitorBase::DynmonitorBase(const std::string name) {
  logger()->set_pattern("[%Y-%m-%d %H:%M:%S.%e] [Dynmonitor] [%n] [%l] %v");
}



DynmonitorBase::~DynmonitorBase() {}

void DynmonitorBase::update(const DynmonitorJsonObject &conf) {
  set_conf(conf.getBase());

  if (conf.dataplaneIsSet()) {
    auto m = getDataplane();
    m->update(conf.getDataplane());
  }
  if (conf.metricsIsSet()) {
    auto m = getMetrics();
    m->update(conf.getMetrics());
  }
}

DynmonitorJsonObject DynmonitorBase::toJsonObject() {
  DynmonitorJsonObject conf;
  conf.setBase(to_json());

  conf.setName(getName());
  conf.setDataplane(getDataplane()->toJsonObject());
  conf.setMetrics(getMetrics()->toJsonObject());

  return conf;
}

void DynmonitorBase::replaceDataplane(const DataplaneJsonObject &conf) {
  // TODO: This is a basic default implementation, maybe you want to improve it
  delDataplane();
  addDataplane(conf);
}

void DynmonitorBase::replaceMetrics(const MetricsJsonObject &conf) {
  // TODO: This is a basic default implementation, maybe you want to improve it
  delMetrics();
  addMetrics(conf);
}


