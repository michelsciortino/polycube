/**
* dynmonitor API generated from dynmonitor.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */

/*
* DataplaneBase.h
*
*
*/

#pragma once

#include "../serializer/DataplaneJsonObject.h"

#include "../DataplaneMetrics.h"





#include <spdlog/spdlog.h>

using namespace polycube::service::model;

class Dynmonitor;

class DataplaneBase {
 public:
  
  DataplaneBase(Dynmonitor &parent);
  
  virtual ~DataplaneBase();
  virtual void update(const DataplaneJsonObject &conf);
  virtual DataplaneJsonObject toJsonObject();

  /// <summary>
  /// Program name
  /// </summary>
  virtual std::string getName() = 0;
  virtual void setName(const std::string &value) = 0;

  /// <summary>
  /// eBPF code
  /// </summary>
  virtual std::string getCode() = 0;
  virtual void setCode(const std::string &value) = 0;

  /// <summary>
  ///
  /// </summary>
  virtual std::shared_ptr<DataplaneMetrics> getMetrics() = 0;
  virtual void addMetrics(const DataplaneMetricsJsonObject &value) = 0;
  virtual void replaceMetrics(const DataplaneMetricsJsonObject &conf);
  virtual void delMetrics() = 0;

  std::shared_ptr<spdlog::logger> logger();
 protected:
  Dynmonitor &parent_;
};
