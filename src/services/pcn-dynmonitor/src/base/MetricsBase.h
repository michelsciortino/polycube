/**
* dynmonitor API generated from dynmonitor.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */

/*
* MetricsBase.h
*
*
*/

#pragma once

#include "../serializer/MetricsJsonObject.h"

#include "../MetricsEntry.h"





#include <spdlog/spdlog.h>

using namespace polycube::service::model;

class Dynmonitor;

class MetricsBase {
 public:
  
  MetricsBase(Dynmonitor &parent);
  
  virtual ~MetricsBase();
  virtual void update(const MetricsJsonObject &conf);
  virtual MetricsJsonObject toJsonObject();

  /// <summary>
  ///
  /// </summary>
  virtual std::shared_ptr<MetricsEntry> getEntry(const std::string &name) = 0;
  virtual std::vector<std::shared_ptr<MetricsEntry>> getEntryList() = 0;
  virtual void addEntry(const std::string &name, const MetricsEntryJsonObject &conf) = 0;
  virtual void addEntryList(const std::vector<MetricsEntryJsonObject> &conf);
  virtual void replaceEntry(const std::string &name, const MetricsEntryJsonObject &conf);
  virtual void delEntry(const std::string &name) = 0;
  virtual void delEntryList();

  std::shared_ptr<spdlog::logger> logger();
 protected:
  Dynmonitor &parent_;
};
