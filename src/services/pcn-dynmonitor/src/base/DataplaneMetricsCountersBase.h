/**
* dynmonitor API generated from dynmonitor.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */

/*
* DataplaneMetricsCountersBase.h
*
*
*/

#pragma once

#include "../serializer/DataplaneMetricsCountersJsonObject.h"

#include "../DataplaneMetricsCountersLables.h"





#include <spdlog/spdlog.h>

using namespace polycube::service::model;

class DataplaneMetrics;

class DataplaneMetricsCountersBase {
 public:
  
  DataplaneMetricsCountersBase(DataplaneMetrics &parent);
  
  virtual ~DataplaneMetricsCountersBase();
  virtual void update(const DataplaneMetricsCountersJsonObject &conf);
  virtual DataplaneMetricsCountersJsonObject toJsonObject();

  /// <summary>
  /// Counter name
  /// </summary>
  virtual std::string getName() = 0;

  /// <summary>
  /// The corrisponding eBPF Table name
  /// </summary>
  virtual std::string getTableName() = 0;
  virtual void setTableName(const std::string &value) = 0;

  /// <summary>
  ///
  /// </summary>
  virtual std::string getTableType() = 0;
  virtual void setTableType(const std::string &value) = 0;

  /// <summary>
  /// Max number of entries in the table
  /// </summary>
  virtual uint64_t getMinEntries() = 0;
  virtual void setMinEntries(const uint64_t &value) = 0;

  /// <summary>
  ///
  /// </summary>
  virtual std::shared_ptr<DataplaneMetricsCountersLables> getLables(const std::string &name) = 0;
  virtual std::vector<std::shared_ptr<DataplaneMetricsCountersLables>> getLablesList() = 0;
  virtual void addLables(const std::string &name, const DataplaneMetricsCountersLablesJsonObject &conf) = 0;
  virtual void addLablesList(const std::vector<DataplaneMetricsCountersLablesJsonObject> &conf);
  virtual void replaceLables(const std::string &name, const DataplaneMetricsCountersLablesJsonObject &conf);
  virtual void delLables(const std::string &name) = 0;
  virtual void delLablesList();

  std::shared_ptr<spdlog::logger> logger();
 protected:
  DataplaneMetrics &parent_;
};
