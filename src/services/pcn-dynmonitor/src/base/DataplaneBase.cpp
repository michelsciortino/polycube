/**
* dynmonitor API generated from dynmonitor.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */


#include "DataplaneBase.h"
#include "../Dynmonitor.h"


DataplaneBase::DataplaneBase(Dynmonitor &parent)
    : parent_(parent) {}

DataplaneBase::~DataplaneBase() {}

void DataplaneBase::update(const DataplaneJsonObject &conf) {

  if (conf.nameIsSet()) {
    setName(conf.getName());
  }
  if (conf.codeIsSet()) {
    setCode(conf.getCode());
  }
  if (conf.metricsIsSet()) {
    auto m = getMetrics();
    m->update(conf.getMetrics());
  }
}

DataplaneJsonObject DataplaneBase::toJsonObject() {
  DataplaneJsonObject conf;

  conf.setName(getName());
  conf.setCode(getCode());
  conf.setMetrics(getMetrics()->toJsonObject());

  return conf;
}

void DataplaneBase::replaceMetrics(const DataplaneMetricsJsonObject &conf) {
  // TODO: This is a basic default implementation, maybe you want to improve it
  delMetrics();
  addMetrics(conf);
}

std::shared_ptr<spdlog::logger> DataplaneBase::logger() {
  return parent_.logger();
}

