/**
* dynmonitor API generated from dynmonitor.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */

/*
* DynmonitorBase.h
*
*
*/

#pragma once

#include "../serializer/DynmonitorJsonObject.h"

#include "../Dataplane.h"
#include "../Metrics.h"

#include "polycube/services/transparent_cube.h"



#include "polycube/services/utils.h"
#include "polycube/services/fifo_map.hpp"

#include <spdlog/spdlog.h>

using namespace polycube::service::model;


class DynmonitorBase: public virtual polycube::service::TransparentCube {
 public:
  DynmonitorBase(const std::string name);
  
  virtual ~DynmonitorBase();
  virtual void update(const DynmonitorJsonObject &conf);
  virtual DynmonitorJsonObject toJsonObject();

  /// <summary>
  ///
  /// </summary>
  virtual std::shared_ptr<Dataplane> getDataplane() = 0;
  virtual void addDataplane(const DataplaneJsonObject &value) = 0;
  virtual void replaceDataplane(const DataplaneJsonObject &conf);
  virtual void delDataplane() = 0;

  /// <summary>
  ///
  /// </summary>
  virtual std::shared_ptr<Metrics> getMetrics() = 0;
  virtual void addMetrics(const MetricsJsonObject &value) = 0;
  virtual void replaceMetrics(const MetricsJsonObject &conf);
  virtual void delMetrics() = 0;
};
