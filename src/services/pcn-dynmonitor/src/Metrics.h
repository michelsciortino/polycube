/**
* dynmonitor API generated from dynmonitor.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


#pragma once


#include "../base/MetricsBase.h"

#include "MetricsEntry.h"

class Dynmonitor;

using namespace polycube::service::model;

class Metrics : public MetricsBase {
 public:
  Metrics(Dynmonitor &parent, const MetricsJsonObject &conf);
  virtual ~Metrics();

  /// <summary>
  ///
  /// </summary>
  std::shared_ptr<MetricsEntry> getEntry(const std::string &name) override;
  std::vector<std::shared_ptr<MetricsEntry>> getEntryList() override;
  void addEntry(const std::string &name, const MetricsEntryJsonObject &conf) override;
  void addEntryList(const std::vector<MetricsEntryJsonObject> &conf) override;
  void replaceEntry(const std::string &name, const MetricsEntryJsonObject &conf) override;
  void delEntry(const std::string &name) override;
  void delEntryList() override;
};
