/**
* dynmonitor API generated from dynmonitor.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


#pragma once


#include "../base/DataplaneMetricsBase.h"

#include "DataplaneMetricsCounters.h"

class Dataplane;

using namespace polycube::service::model;

class DataplaneMetrics : public DataplaneMetricsBase {
 public:
  DataplaneMetrics(Dataplane &parent, const DataplaneMetricsJsonObject &conf);
  virtual ~DataplaneMetrics();

  /// <summary>
  /// The list of exported coutners
  /// </summary>
  std::shared_ptr<DataplaneMetricsCounters> getCounters(const std::string &name) override;
  std::vector<std::shared_ptr<DataplaneMetricsCounters>> getCountersList() override;
  void addCounters(const std::string &name, const DataplaneMetricsCountersJsonObject &conf) override;
  void addCountersList(const std::vector<DataplaneMetricsCountersJsonObject> &conf) override;
  void replaceCounters(const std::string &name, const DataplaneMetricsCountersJsonObject &conf) override;
  void delCounters(const std::string &name) override;
  void delCountersList() override;
};
