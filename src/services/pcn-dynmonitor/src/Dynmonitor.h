/**
* dynmonitor API generated from dynmonitor.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


#pragma once


#include "../base/DynmonitorBase.h"

#include "Dataplane.h"
#include "Metrics.h"


using namespace polycube::service::model;

class Dynmonitor : public DynmonitorBase {
 public:
  Dynmonitor(const std::string name, const DynmonitorJsonObject &conf);
  virtual ~Dynmonitor();

  void packet_in(polycube::service::Sense sense,
                 polycube::service::PacketInMetadata &md,
                 const std::vector<uint8_t> &packet) override;

  /// <summary>
  ///
  /// </summary>
  std::shared_ptr<Dataplane> getDataplane() override;
  void addDataplane(const DataplaneJsonObject &value) override;
  void replaceDataplane(const DataplaneJsonObject &conf) override;
  void delDataplane() override;

  /// <summary>
  ///
  /// </summary>
  std::shared_ptr<Metrics> getMetrics() override;
  void addMetrics(const MetricsJsonObject &value) override;
  void replaceMetrics(const MetricsJsonObject &conf) override;
  void delMetrics() override;
};
