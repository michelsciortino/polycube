/**
* dynmonitor API generated from dynmonitor.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


// TODO: Modify these methods with your own implementation


#include "Dataplane.h"
#include "Dynmonitor.h"


Dataplane::Dataplane(Dynmonitor &parent, const DataplaneJsonObject &conf)
    : DataplaneBase(parent) {
  if (conf.nameIsSet()) {
    setName(conf.getName());
  }

  if (conf.codeIsSet()) {
    setCode(conf.getCode());
  }

  auto value = conf.getMetrics();
  addMetrics(conf.getMetrics());
}

Dataplane::~Dataplane() {}

std::string Dataplane::getName() {
  throw std::runtime_error("Dataplane::getName: Method not implemented");
}

void Dataplane::setName(const std::string &value) {
  throw std::runtime_error("Dataplane::setName: Method not implemented");
}

std::string Dataplane::getCode() {
  throw std::runtime_error("Dataplane::getCode: Method not implemented");
}

void Dataplane::setCode(const std::string &value) {
  throw std::runtime_error("Dataplane::setCode: Method not implemented");
}

std::shared_ptr<DataplaneMetrics> Dataplane::getMetrics() {
  throw std::runtime_error("Dataplane::getMetrics: Method not implemented");
}

void Dataplane::addMetrics(const DataplaneMetricsJsonObject &value) {
  throw std::runtime_error("Dataplane::addMetrics: Method not implemented");
}

// Basic default implementation, place your extension here (if needed)
void Dataplane::replaceMetrics(const DataplaneMetricsJsonObject &conf) {
  // call default implementation in base class
  DataplaneBase::replaceMetrics(conf);
}

void Dataplane::delMetrics() {
  throw std::runtime_error("Dataplane::delMetrics: method not implemented");
}


