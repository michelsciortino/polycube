/**
* dynmonitor API generated from dynmonitor.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


// TODO: Modify these methods with your own implementation


#include "Metrics.h"
#include "Dynmonitor.h"


Metrics::Metrics(Dynmonitor &parent, const MetricsJsonObject &conf)
    : MetricsBase(parent) {
  addEntryList(conf.getEntry());
}

Metrics::~Metrics() {}
std::shared_ptr<MetricsEntry> Metrics::getEntry(const std::string &name) {
  throw std::runtime_error("Metrics::getEntry: Method not implemented");
}

std::vector<std::shared_ptr<MetricsEntry>> Metrics::getEntryList() {
  throw std::runtime_error("Metrics::getEntryList: Method not implemented");
}

void Metrics::addEntry(const std::string &name, const MetricsEntryJsonObject &conf) {
  throw std::runtime_error("Metrics::addEntry: Method not implemented");
}

// Basic default implementation, place your extension here (if needed)
void Metrics::addEntryList(const std::vector<MetricsEntryJsonObject> &conf) {
  // call default implementation in base class
  MetricsBase::addEntryList(conf);
}

// Basic default implementation, place your extension here (if needed)
void Metrics::replaceEntry(const std::string &name, const MetricsEntryJsonObject &conf) {
  // call default implementation in base class
  MetricsBase::replaceEntry(name, conf);
}

void Metrics::delEntry(const std::string &name) {
  throw std::runtime_error("Metrics::delEntry: Method not implemented");
}

// Basic default implementation, place your extension here (if needed)
void Metrics::delEntryList() {
  // call default implementation in base class
  MetricsBase::delEntryList();
}


