/**
* dyntmon API generated from dyntmon.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */

/*
* DataplaneMetricsJsonObject.h
*
*
*/

#pragma once


#include "JsonObjectBase.h"

#include "DataplaneMetricsOpenMetricsMetadataJsonObject.h"

namespace polycube {
namespace service {
namespace model {


/// <summary>
///
/// </summary>
class  DataplaneMetricsJsonObject : public JsonObjectBase {
public:
  DataplaneMetricsJsonObject();
  DataplaneMetricsJsonObject(const nlohmann::json &json);
  ~DataplaneMetricsJsonObject() final = default;
  nlohmann::json toJson() const final;


  /// <summary>
  /// Name of the metric (e.g., number of HTTP requests)
  /// </summary>
  std::string getName() const;
  void setName(std::string value);
  bool nameIsSet() const;

  /// <summary>
  /// Corrisponding eBPF map name
  /// </summary>
  std::string getMapName() const;
  void setMapName(std::string value);
  bool mapNameIsSet() const;

  /// <summary>
  /// Open-Metrics metadata
  /// </summary>
  DataplaneMetricsOpenMetricsMetadataJsonObject getOpenMetricsMetadata() const;
  void setOpenMetricsMetadata(DataplaneMetricsOpenMetricsMetadataJsonObject value);
  bool openMetricsMetadataIsSet() const;
  void unsetOpenMetricsMetadata();

private:
  std::string m_name;
  bool m_nameIsSet;
  std::string m_mapName;
  bool m_mapNameIsSet;
  DataplaneMetricsOpenMetricsMetadataJsonObject m_openMetricsMetadata;
  bool m_openMetricsMetadataIsSet;
};

}
}
}

