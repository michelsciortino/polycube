/**
* dyntmon API generated from dyntmon.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */

/*
* DataplaneMetricsOpenMetricsMetadataJsonObject.h
*
*
*/

#pragma once


#include "JsonObjectBase.h"

#include "DataplaneMetricsOpenMetricsMetadataLabelJsonObject.h"
#include <vector>

namespace polycube {
namespace service {
namespace model {

enum class DataplaneMetricsOpenMetricsMetadataTypeEnum {
  COUNTER, GAUGE, HISTOGRAM, SUMMARY, UNTYPED
};

/// <summary>
///
/// </summary>
class  DataplaneMetricsOpenMetricsMetadataJsonObject : public JsonObjectBase {
public:
  DataplaneMetricsOpenMetricsMetadataJsonObject();
  DataplaneMetricsOpenMetricsMetadataJsonObject(const nlohmann::json &json);
  ~DataplaneMetricsOpenMetricsMetadataJsonObject() final = default;
  nlohmann::json toJson() const final;


  /// <summary>
  /// Metric description
  /// </summary>
  std::string getHelp() const;
  void setHelp(std::string value);
  bool helpIsSet() const;

  /// <summary>
  /// Metric type
  /// </summary>
  DataplaneMetricsOpenMetricsMetadataTypeEnum getType() const;
  void setType(DataplaneMetricsOpenMetricsMetadataTypeEnum value);
  bool typeIsSet() const;
  static std::string DataplaneMetricsOpenMetricsMetadataTypeEnum_to_string(const DataplaneMetricsOpenMetricsMetadataTypeEnum &value);
  static DataplaneMetricsOpenMetricsMetadataTypeEnum string_to_DataplaneMetricsOpenMetricsMetadataTypeEnum(const std::string &str);

  /// <summary>
  /// Label attached to the metric
  /// </summary>
  const std::vector<DataplaneMetricsOpenMetricsMetadataLabelJsonObject>& getLabel() const;
  void addDataplaneMetricsOpenMetricsMetadataLabel(DataplaneMetricsOpenMetricsMetadataLabelJsonObject value);
  bool labelIsSet() const;
  void unsetLabel();

private:
  std::string m_help;
  bool m_helpIsSet;
  DataplaneMetricsOpenMetricsMetadataTypeEnum m_type;
  bool m_typeIsSet;
  std::vector<DataplaneMetricsOpenMetricsMetadataLabelJsonObject> m_label;
  bool m_labelIsSet;
};

}
}
}

