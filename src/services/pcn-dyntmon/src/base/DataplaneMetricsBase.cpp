/**
* dyntmon API generated from dyntmon.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */


#include "DataplaneMetricsBase.h"
#include "../Dyntmon.h"


DataplaneMetricsBase::DataplaneMetricsBase(Dataplane &parent)
    : parent_(parent) {}

DataplaneMetricsBase::~DataplaneMetricsBase() {}

void DataplaneMetricsBase::update(const DataplaneMetricsJsonObject &conf) {

  if (conf.mapNameIsSet()) {
    setMapName(conf.getMapName());
  }
  if (conf.openMetricsMetadataIsSet()) {
    auto m = getOpenMetricsMetadata();
    m->update(conf.getOpenMetricsMetadata());
  }
}

DataplaneMetricsJsonObject DataplaneMetricsBase::toJsonObject() {
  DataplaneMetricsJsonObject conf;

  conf.setName(getName());
  conf.setMapName(getMapName());
  conf.setOpenMetricsMetadata(getOpenMetricsMetadata()->toJsonObject());

  return conf;
}

void DataplaneMetricsBase::replaceOpenMetricsMetadata(const DataplaneMetricsOpenMetricsMetadataJsonObject &conf) {
  // TODO: This is a basic default implementation, maybe you want to improve it
  delOpenMetricsMetadata();
  addOpenMetricsMetadata(conf);
}

std::shared_ptr<spdlog::logger> DataplaneMetricsBase::logger() {
  return parent_.logger();
}

