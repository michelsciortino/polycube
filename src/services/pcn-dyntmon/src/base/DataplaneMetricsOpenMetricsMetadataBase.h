/**
* dyntmon API generated from dyntmon.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */

/*
* DataplaneMetricsOpenMetricsMetadataBase.h
*
*
*/

#pragma once

#include "../serializer/DataplaneMetricsOpenMetricsMetadataJsonObject.h"

#include "../DataplaneMetricsOpenMetricsMetadataLabel.h"





#include <spdlog/spdlog.h>

using namespace polycube::service::model;

class DataplaneMetrics;

class DataplaneMetricsOpenMetricsMetadataBase {
 public:
  
  DataplaneMetricsOpenMetricsMetadataBase(DataplaneMetrics &parent);
  
  virtual ~DataplaneMetricsOpenMetricsMetadataBase();
  virtual void update(const DataplaneMetricsOpenMetricsMetadataJsonObject &conf);
  virtual DataplaneMetricsOpenMetricsMetadataJsonObject toJsonObject();

  /// <summary>
  /// Metric description
  /// </summary>
  virtual std::string getHelp() = 0;
  virtual void setHelp(const std::string &value) = 0;

  /// <summary>
  /// Metric type
  /// </summary>
  virtual DataplaneMetricsOpenMetricsMetadataTypeEnum getType() = 0;
  virtual void setType(const DataplaneMetricsOpenMetricsMetadataTypeEnum &value) = 0;

  /// <summary>
  /// Label attached to the metric
  /// </summary>
  virtual std::shared_ptr<DataplaneMetricsOpenMetricsMetadataLabel> getLabel(const std::string &name) = 0;
  virtual std::vector<std::shared_ptr<DataplaneMetricsOpenMetricsMetadataLabel>> getLabelList() = 0;
  virtual void addLabel(const std::string &name, const DataplaneMetricsOpenMetricsMetadataLabelJsonObject &conf) = 0;
  virtual void addLabelList(const std::vector<DataplaneMetricsOpenMetricsMetadataLabelJsonObject> &conf);
  virtual void replaceLabel(const std::string &name, const DataplaneMetricsOpenMetricsMetadataLabelJsonObject &conf);
  virtual void delLabel(const std::string &name) = 0;
  virtual void delLabelList();

  std::shared_ptr<spdlog::logger> logger();
 protected:
  DataplaneMetrics &parent_;
};
